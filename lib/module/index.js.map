{"version":3,"sources":["index.tsx"],"names":["NativeModules","NativeEventEmitter","Platform","RNShopifyBuy","ShopifyBuyEvents","canMakePayments","initialize","settings","creditCardVault","card","pay","checkoutID","addListener","eventName","callback","OS","console","warn"],"mappings":"AAAA,SACEA,aADF,EAEEC,kBAFF,EAGEC,QAHF,QAKO,cALP;AAOA,MAAM;AAAEC,EAAAA;AAAF,IAAmBH,aAAzB;AAEA,MAAMI,gBAAgB,GAAG,IAAIH,kBAAJ,CAAuBD,aAAa,CAACG,YAArC,CAAzB;AA0BA,eAAe;AACbE,EAAAA,eAAe,EAAEF,YAAY,CAACE,eADjB;;AAGb;AACF;AACA;AACA;AACA;AACEC,EAAAA,UAAU,EAAGC,QAAD,IAAwB;AAClCJ,IAAAA,YAAY,CAACG,UAAb,CAAwBC,QAAxB;AACD,GAVY;;AAYb;AACF;AACA;AACA;AACA;AACEC,EAAAA,eAAe,EAAGC,IAAD,IAAgC;AAC/C,WAAON,YAAY,CAACK,eAAb,CAA6BC,IAA7B,CAAP;AACD,GAnBY;;AAqBb;AACF;AACA;AACA;AACA;AACEC,EAAAA,GAAG,EAAGC,UAAD,IAAuC;AAC1C,WAAOR,YAAY,CAACO,GAAb,CAAiBC,UAAjB,CAAP;AACD,GA5BY;;AA8Bb;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,WAAW,EAAE,CACXC,SADW,EAEXC,QAFW,KAGoB;AAC/B,QAAIZ,QAAQ,CAACa,EAAT,KAAgB,SAApB,EAA+B;AAC7BC,MAAAA,OAAO,CAACC,IAAR,CAAa,qCAAb;AACA,aAAO,IAAP;AACD;;AAED,WAAOb,gBAAgB,CAACQ,WAAjB,CAA6BC,SAA7B,EAAwCC,QAAxC,CAAP;AACD;AA9CY,CAAf","sourcesContent":["import {\n  NativeModules,\n  NativeEventEmitter,\n  Platform,\n  EmitterSubscription,\n} from 'react-native';\n\nconst { RNShopifyBuy } = NativeModules;\n\nconst ShopifyBuyEvents = new NativeEventEmitter(NativeModules.RNShopifyBuy);\n\ntype Settings = {\n  shopDomain: string;\n  accessToken: string;\n  merchantID: string;\n  locale?: string;\n  googlePayToken?: string;\n};\n\ntype Token = String | null;\n\ntype Card = {\n  firstName: string;\n  middleName?: string;\n  lastName: string;\n  number: string;\n  expireMonth: string;\n  expireYear: string;\n  verificationCode?: string;\n};\n\ntype EventName = 'didAuthorizePayment' | 'didFinish';\n\ntype PaymentStatus = 'success' | 'failed';\n\nexport default {\n  canMakePayments: RNShopifyBuy.canMakePayments as boolean,\n\n  /**\n   * Initialize Shopify mobile-sdk\n   * iOS/Android\n   * @param settings\n   */\n  initialize: (settings: Settings) => {\n    RNShopifyBuy.initialize(settings);\n  },\n\n  /**\n   * Generate a credit card token\n   * iOS/Android\n   * @param card\n   */\n  creditCardVault: (card: Card): Promise<Token> => {\n    return RNShopifyBuy.creditCardVault(card);\n  },\n\n  /**\n   * Pay with mobile dedicated sdk\n   * iOS\n   * @param checkoutID\n   */\n  pay: (checkoutID: String): Promise<void> => {\n    return RNShopifyBuy.pay(checkoutID);\n  },\n\n  /**\n   * Add a new listener on ApplePay events\n   * iOS\n   * @param eventName\n   * @param callback\n   */\n  addListener: (\n    eventName: EventName,\n    callback: (status?: PaymentStatus) => void\n  ): EmitterSubscription | null => {\n    if (Platform.OS === 'android') {\n      console.warn('Listeners are only available on iOS');\n      return null;\n    }\n\n    return ShopifyBuyEvents.addListener(eventName, callback);\n  },\n};\n"]}